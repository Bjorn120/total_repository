@page "/listacorsi"

@using BlazorAppFITSTIC.Data
@using BlazorAppFITSTIC.Repository
@inject CourseService cs
@inject TeacherService ts

<h3>Lista Corsi</h3>

@if (lc == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Descrizione</th>
                <th>Materia</th>
                <th>Nascita</th>
                <th>Iscrizione</th>
                <th>Studenti</th>
                <th>Docente</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in lc)
            {
            <tr>
                <td>@c.Nome</td>
                <td>@c.ToString()</td>
                <td>@c.Materia</td>
                <td>@c.Inizio.ToShortDateString()</td>
                <td>@c.Fine.ToShortDateString()</td>
                <td>@c.Students.Count</td>
                @foreach (Teacher t in lt)
                {
                    @if (c.Docente == t)
                    {
                        <td>@t.Cognome</td>
                    }
                    else
                    {
                        <td>Docente non assegnato</td>
                    }

                }

                <td>
                    <a href="/dettagliocorso/@c.Id" class="btn btn-outline-info">Modifica</a>
                    <button class="btn btn-outline-danger" @onclick="_ => DeleteStudentAsync(c)">Elimina</button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Course> lc;
    private List<Teacher> lt;

    protected override async Task OnInitializedAsync()
    {
        lc = await cs.GetCourses();
        lt = await ts.GetTeachers();
    }

    async Task DeleteStudentAsync(Course c)
    {
        lc.Remove(c);
        await cs.Remove(c);
    }
}